{"version":3,"sources":["components/search.component.tsx","components/enroll.component.tsx","components/login.component.tsx","common/EventBus.ts","components/header.component.tsx","App.tsx","reportWebVitals.ts","index.tsx","services/auth.service.ts","services/auth-header.ts","services/aadhar.service.ts"],"names":["Search","props","handleAadharNoChange","bind","handleSearch","state","redirect","userReady","currentUser","accessToken","aadharNo","loading","imageUrl","data","multiple","loader","selectedPatient","AuthService","getCurrentUser","this","setState","aadharService","getAadharDetails","then","res","Array","isArray","eval","length","history","push","catch","err","e","currentTarget","value","style","marginTop","handleChange","file","getAadharDetrailsUpload","status","aadhaar_number","className","Grid","boxShadow","spinning","headers","name","listType","showUploadList","beforeUpload","onChange","src","alt","width","uploadButton","fontSize","margin","disabled","placeholder","onClick","type","title","visible","okText","onOk","Group","target","direction","slice","map","option","patient_id","first_name","Component","submit","confirmAlert","message","buttons","label","handleSubmit","success","alreadyExist","registered","key","window","location","reload","componentDidMount","search","params","URLSearchParams","aadhaarNumber","get","selectedPatientId","console","log","pat","find","patient","pre_existing","error","saveAadharDetails","String","last_name","dob","age","gender","father_name","father_no","mother_name","mother_no","mobile_no","email_addr","city","country","pin_code","addr","to","handleCancel","htmlFor","size","id","checked","rows","onCancel","destroyOnClose","footer","Login","handleLogin","username","password","Yup","shape","required","formValue","login","resMessage","response","toString","initialValues","validationSchema","onSubmit","component","role","eventBus","on","event","callback","document","addEventListener","dispatch","dispatchEvent","CustomEvent","detail","remove","removeEventListener","HeaderComponent","background","borderBottomLeftRadius","icon","UserOutlined","activeClassName","href","authService","logout","App","logOut","undefined","user","EventBus","pathname","includes","exact","path","Enroll","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","localStorage","setItem","JSON","stringify","Promise","resolve","reject","removeItem","email","axios","post","API_URL","userStr","getItem","parse","authHeader","AadharService","aadharnumber","img","FormData","append"],"mappings":"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","file":"static/js/main.8759c20b.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport IUser from \"../types/user.type\";\nimport { Button, Card, Input, Modal, Radio, Space, Spin, Upload } from \"antd\";\nimport './search.scss';\nimport aadharService from \"../services/aadhar.service\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\ninterface RouterProps {\n  history: string;\n}\ntype Props = RouteComponentProps<RouterProps>;\ntype State = {\n  redirect: string | null,\n  userReady: boolean,\n  currentUser: IUser & { accessToken: string },\n  aadharNo: string | null\n  loading: boolean,\n  imageUrl: string,\n  data: any,\n  multiple: boolean\n  loader: boolean,\n  selectedPatient:string\n}\nexport default class Search extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.handleAadharNoChange = this.handleAadharNoChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { accessToken: \"\" },\n      aadharNo: null,\n      loading: false,\n      imageUrl: \"\",\n      data: [],\n      multiple: false,\n      loader: false,\n      selectedPatient:\"\"\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  handleSearch() {\n    if (this.state.aadharNo) {\n      this.setState({ loader: true });\n      aadharService.getAadharDetails(this.state.aadharNo).then(res => {\n        const data = Array.isArray(res.data) ? res.data : eval(res.data);\n\n        if (data.length > 2) {\n          this.setState({ data: data, multiple: true });\n        }\n        else {\n          this.props.history.push(\"/enroll?aaNo=\" + this.state.aadharNo);\n        }\n        this.setState({ loader: false });\n      }).catch(err => {\n        this.setState({ loader: false });\n      });\n    }\n    // if (res.data?.length > 2) {\n\n    // } else {\n    // }\n    // window.location.reload();\n  }\n\n  handleAadharNoChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      aadharNo: e.currentTarget.value\n    });\n  }\n\n  uploadButton() {\n    return <div>\n      {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  }\n\n  handleChange({ file }: any) {\n    this.setState({ loading: true })\n    aadharService.getAadharDetrailsUpload(file).then(res => {\n      if (res.status === 200) {\n        const data = Array.isArray(res.data) ? res.data : eval(res.data);\n\n        if (data.length > 2) {\n          this.setState({ data: data, multiple: true });\n        }\n        else {\n          this.props.history.push(\"/enroll?aaNo=\" + data[1].aadhaar_number);\n        }\n        this.setState({ imageUrl: file })\n        this.setState({ loading: false })\n      }\n    }).catch(err => {\n      this.setState({ loading: false })\n    });\n  }\n  render() {\n    return <div className=\"search-wrapper\" >\n      {/* <Spin> */}\n      {!this.state.multiple ? <Card.Grid style={{ boxShadow: \"0 1px 2px -2px rgb(0 0 0 / 16%), 0 3px 6px 0 rgb(0 0 0 / 12%), 0 5px 12px 4px rgb(0 0 0 / 9%)\" }} className=\"card\">\n        <Spin spinning={this.state.loader}>\n          <Upload\n            headers={{ 'Content-Type': 'multipart/formData' }}\n            name=\"avatar\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            beforeUpload={() => false}\n            onChange={this.handleChange.bind(this)}\n          >\n            {this.state.imageUrl ? <img src={this.state.imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : this.uploadButton()}\n          </Upload>\n          <div>Upload Aaadhaar</div>\n          <div style={{ fontSize: \"1.6rem\", margin: \"1rem 0\" }}>---or---</div>\n          <Input disabled={this.state.loading} onChange={this.handleAadharNoChange} placeholder=\"Type Aadhaar Number\" />\n          <Button disabled={this.state.loading} style={{ width: \"100%\", margin: \"1rem 0\" }} onClick={this.handleSearch} type=\"primary\">Submit</Button>\n        </Spin>\n      </Card.Grid> : null}\n      {/* </Spin> */}\n      <Modal title=\"Choose Patient\" visible={this.state.multiple} okText=\"Next\" onOk={(e) => {\n        this.props.history.push(`/enroll?aaNo=${this.state.data[1].aadhaar_number}&patient=${this.state.selectedPatient}`);\n       }} >\n        <Radio.Group onChange={(e)=>{\n          this.setState({selectedPatient:e.target.value});\n        }} >\n          <Space direction=\"vertical\">\n            {this.state.data.slice(1).map((option:any) => {\n              return <Radio value={option.patient_id}>{`${option.first_name} (${option.patient_id})`}</Radio>\n            })}\n          </Space>\n        </Radio.Group>\n      </Modal>\n    </div>\n  }\n\n  // render() {\n  //   if (this.state.redirect) {\n  //     return <Redirect to={this.state.redirect} />\n  //   }\n  //   return (\n  //     <div className=\"container\">\n  //       {(this.state.userReady) ?\n  //         <div>\n  //           <div className=\"row\">\n  //             <div className=\"col-md-3\">\n  //             <label htmlFor=\"Aadhar\">Enter your Aadhar Number</label>\n  //             </div>\n  //             <div className=\"col-md-9\">\n  //               <input type=\"text\" className=\"form-control\" id=\"aaNo\" onChange={this.handleAadharNoChange} />\n  //             </div>\n  //           </div>\n  //           <div className=\"clearfix\"></div>\n  //           <div className=\"row\">\n  //             <div className=\"col-md-12 text-center\">\n  //               <label htmlFor=\"OR\">OR</label>\n  //             </div>\n  //           </div>\n  //           <div className=\"clearfix\"></div>\n  //           <div className=\"row\">\n  //             <div className=\"col-md-3\">\n  //             <label htmlFor=\"Aadhar\">Upload your Aadhar Copy</label>\n  //             </div>\n  //             <div className=\"col-md-9\">\n  //               <input className=\"form-control\" type=\"file\" id=\"formFile\" />\n  //             </div>\n  //           </div>\n  //           <div className=\"clearfix\"></div>\n  //           <div className=\"row\">\n  //             <div className=\"col-md-12 text-center\">\n  //               &nbsp;\n  //             </div>\n  //           </div>\n  //           <div className=\"clearfix\"></div>\n  //           <div className=\"row\">\n  //             <div className=\"col-md-6 text-right\">\n  //               <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSearch}>Submit</button>\n  //             </div>\n  //             <div className=\"col-md-1\">\n  //               &nbsp;\n  //             </div>\n  //             <div className=\"col-md-5 text-left\">\n  //             <button type=\"button\" className=\"btn btn-primary\">Clear</button>\n  //             </div>\n  //           </div>\n  //         </div>\n  //         : null}\n  //     </div>\n  //   );\n  // }\n}\n","import { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\nimport IUser from \"../types/user.type\";\nimport aadharService from \"../services/aadhar.service\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { Input, Modal } from \"antd\";\nimport './enroll.scss'\n\ninterface RouterProps {\n  history: string;\n}\ntype Props = RouteComponentProps<RouterProps>;\n\ntype State = {\n  redirect: string | null,\n  userReady: boolean,\n  success: string,\n  alreadyExist: boolean;\n  registered?: number,\n  currentUser: IUser & { accessToken: string },\n  data: {\n    first_name?: string,\n    last_name?: string,\n    dob?: string,\n    age?: string,\n    aadhaar_number?: string,\n    gender?: string,\n    father_name?: string,\n    father_no?: string,\n    mother_name?: string,\n    mother_no?: string,\n    mobile_no?: string,\n    email_addr?: string,\n    city?: string,\n    state?: string,\n    country?: string,\n    pin_code?: string,\n    addr?: string,\n  }\n}\n\n\n\n\nexport default class Search extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n\n\n    // this.handFirstNameChange = this.handFirstNameChange.bind(this);\n    // this.handMobileNoChange = this.handMobileNoChange.bind(this);\n    // this.handAddressChange = this.handAddressChange.bind(this);\n    // this.handleMaleGender = this.handleMaleGender.bind(this);\n    // this.handleFemaleGender = this.handleFemaleGender.bind(this);\n    // this.handleOtherGender = this.handleOtherGender.bind(this);\n    // this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submit = this.submit.bind(this);\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { accessToken: \"\" },\n      data: {},\n      success: \"\",\n      alreadyExist: true,\n      registered: 0\n    };\n\n\n  }\n\n  handleChange(e: React.ChangeEvent<HTMLInputElement>, key: string) {\n    this.setState({\n      data: {\n        ...this.state.data,\n        [key]: e.currentTarget.value,\n      }\n    });\n  }\n\n\n\n  handleCancel() {\n    this.props.history.push(\"/search\");\n    window.location.reload();\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n\n    this.setState({ currentUser: currentUser, userReady: true })\n\n\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let aadhaarNumber = params.get('aaNo');\n    let selectedPatientId = params.get('patient');\n\n    if (aadhaarNumber) {\n      console.log(aadhaarNumber)\n      aadharService.getAadharDetails(aadhaarNumber).then(\n        (res) => {\n          const data = Array.isArray(res.data)? res.data : eval(res.data);\n          if (data) {\n\n            const pat= selectedPatientId ? data.slice(1).find((patient:any)=>patient.patient_id===selectedPatientId) : data[1];\n            if(pat){\n              this.setState({ registered: data[0].pre_existing, data:  pat  });\n            }\n          }\n\n        },\n        error => {\n        }\n      );\n    }\n    // Modal.error({\n    //   title:'Patient already exists!!',\n    //   content: <div>\n    //     <h3></h3>\n    //   </div>,\n    //   onCancel: () => {\n    //     this.setState({alreadyExist: true})\n    //   },\n    //   onOk: () => {\n    //     this.props.history.replace(\"/search\");\n    //   },\n    //   okText: 'Go Back',\n    //   mask: false,\n    //   keyboard: false,\n    // })\n  }\n\n\n\n  handleSubmit() {\n    aadharService.saveAadharDetails({...this.state.data,key:String(this.state.registered),aadhaar_number:String(this.state.data.aadhaar_number)}).then(\n      (res) => {\n        this.setState({ data: {},registered:res.data[0], success: res.data[1] });\n      },\n      error => {\n      }\n    );\n  }\n\n  submit = () => {\n    confirmAlert({\n      title: 'Confirm to submit',\n      message: 'Are you sure to do this.',\n      buttons: [\n        {\n          label: 'Yes',\n          //onClick: () => alert('Click Yes')\n          onClick: () => {\n            this.handleSubmit();\n          }\n        },\n        {\n          label: 'No',\n          onClick: () => {\n\n          }\n        }\n      ]\n    });\n  };\n\n  render() {\n    const { first_name = \"\",\n      last_name = \"\",\n      dob = \"\",\n      age = \"\",\n      aadhaar_number = \"\",\n      gender = \"\",\n      father_name = \"\",\n      father_no = \"\",\n      mother_name = \"\",\n      mother_no = \"\",\n      mobile_no = \"\",\n      email_addr = \"\",\n      city = \"\",\n      state = \"\",\n      country = \"\",\n      pin_code = \"\",\n      addr = \"\" } = this.state.data;\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    return (\n      <div className=\"registration-wrapper\">\n        <div className=\"registration-nav\">\n          <div className=\"tab\">Patient Auto Enrollment</div>\n\n        </div>\n        {(this.state.userReady) ?\n          <div className=\"form-wrapper\">\n            <div className=\"row col-md-12 text-center mt-3\">\n              {/* <div className=\"col-md-12 text-center page-header\">\n                <h1>\n                  Patient Auto Enrollment\n                </h1>\n              </div> */}\n            </div>\n            <div className=\"clearfix\"></div>\n            <div>\n              <div className=\"aadhaar-section\">\n                <div>\n                Aadhaar No - <span>{this.state.data[\"aadhaar_number\"]}</span>\n                </div>\n                <div className=\"action-btn\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={this.submit}>Submit</button>\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleCancel}>Clear</button>\n                </div>\n              </div>\n              <fieldset className=\"scheduler-border\">\n                <legend className=\"scheduler-border\">Patient Information</legend>\n                <div className=\"control-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-2\">\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <label htmlFor=\"fName\">First Name</label>\n                          <Input size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" value={first_name} onChange={(e) => this.handleChange(e, \"first_name\")} />\n                          {/* <input type=\"text\" className=\"form-control\" id=\"fName\" value={this.state.data.Name} onChange={this.handFirstNameChange} /> */}\n                          <div >\n                            <label htmlFor=\"faName\">Father Name</label>\n                            <Input value={father_name} onChange={(e) => this.handleChange(e, \"father_name\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-10\">\n                      <div className=\"row\">\n                        <div className=\"col-md-2\">\n                          <label htmlFor=\"lName\">Last Name</label>\n                          <Input size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" value={last_name} onChange={(e) => this.handleChange(e, \"last_name\")} />\n                        </div>\n                        <div className=\"col-md-3\">\n                          <label htmlFor=\"mNo\">Email Address</label>\n                          <Input value={email_addr} onChange={(e) => this.handleChange(e, \"email_addr\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                        <div className=\"col-md-3\">\n                          <label htmlFor=\"DOB\">Date of Birth</label>\n                          <Input size=\"small\" value={dob} type=\"text\" className=\"form-control\" id=\"dOB\" />\n                        </div>\n                        <div className=\"col-md-3\">\n                          <label htmlFor=\"Gender\">Gender</label>\n                          <div className=\"row mt-2\">\n                            <div className=\"col-md-12\">\n                              <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"male\" id=\"male\" value=\"Male\" checked={gender === \"Male\"} onChange={() => this.setState({ data: { ...this.state.data, gender: \"Male\" } })} />\n                                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">Male</label>\n                              </div>\n\n                              <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"female\" id=\"female\" value=\"Female\" checked={gender === \"Female\"} onChange={() => this.setState({ data: { ...this.state.data, gender: \"Female\" } })} />\n                                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">Female</label>\n                              </div>\n\n                              <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"other\" id=\"other\" value=\"Other\" checked={gender === \"Other\"} onChange={() => this.setState({ data: { ...this.state.data, gender: \"Other\" } })} />\n                                <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">Other</label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* <div className=\"col-md-2\">\n                          <label htmlFor=\"mNo\">Mobile No</label>\n                          <Input value={mobile_no} onChange={(e) => this.handleChange(e, \"mobile_no\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div> */}\n\n                      </div>\n                      <div className=\"clearfix\"></div>\n                      <div className=\"row\">\n\n                        <div className=\"col-md-2\">\n                          <label htmlFor=\"faNo\">Father Contact No</label>\n                          <Input value={father_no} onChange={(e) => this.handleChange(e, \"father_no\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                        <div className=\"col-md-3\">\n                          <label htmlFor=\"moName\">Mother Name</label>\n                          <Input value={mother_name} onChange={(e) => this.handleChange(e, \"mother_name\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                        <div className=\"col-md-3\">\n                          <label htmlFor=\"moNo\">Mother Contact No</label>\n                          <Input value={mother_no} onChange={(e) => this.handleChange(e, \"mother_no\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                      </div>\n\n                    </div>\n\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n\n            <div>\n              <fieldset className=\"scheduler-border\">\n                <legend className=\"scheduler-border\">Contact Information</legend>\n                <div className=\"control-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-3\">\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <label htmlFor=\"mNo\">Mobile No</label>\n                          <Input value={mobile_no} onChange={(e) => this.handleChange(e, \"mobile_no\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                      </div>\n                      <div className=\"clearfix\"></div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <label htmlFor=\"city\">City</label>\n                          <Input value={city} onChange={(e) => this.handleChange(e, \"city\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                        {/* <div className=\"col-md-7\">\n                          <input type=\"text\" className=\"form-control\" id=\"city\" />\n                        </div> */}\n                      </div>\n                      <div className=\"clearfix\"></div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <label htmlFor=\"country\">Country</label>\n                          <Input value={country} onChange={(e) => this.handleChange(e, \"country\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                        {/* <div className=\"col-md-7\">\n                          <input type=\"text\" className=\"form-control\" id=\"country\" />\n                        </div> */}\n                      </div>\n\n\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <label htmlFor=\"mNo\">Email Address</label>\n                          <Input value={email_addr} onChange={(e) => this.handleChange(e, \"email_addr\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                        {/* <div className=\"col-md-7\">\n                          <input type=\"text\" className=\"form-control\" id=\"email\" />\n                        </div> */}\n                      </div>\n                      <div className=\"clearfix\"></div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <label htmlFor=\"state\">State</label>\n                          <Input value={state} onChange={(e) => this.handleChange(e, \"state\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                        {/* <div className=\"col-md-7\">\n                          <input type=\"text\" className=\"form-control\" id=\"state\" />\n                        </div> */}\n                      </div>\n                      <div className=\"clearfix\"></div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <label htmlFor=\"pCode\">Postal Code</label>\n                          <Input value={pin_code} onChange={(e) => this.handleChange(e, \"pin_code\")} size=\"small\" type=\"text\" className=\"form-control\" id=\"fName\" />\n                        </div>\n                        {/* <div className=\"col-md-7\">\n                          <input type=\"text\" className=\"form-control\" id=\"pCode\" />\n                        </div> */}\n                      </div>\n                    </div>\n                    <div className=\"col-md-5\">\n                      <label htmlFor=\"add\">Full Address</label>\n                      <textarea value={addr} onChange={(e) => this.setState({ data: { ...this.state.data, addr: e.target.value } })} rows={5} className=\"form-control\" id=\"add\" />\n                    </div>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n\n          </div>\n          : null}\n        <Modal onCancel={() => {\n          this.setState({ success: \"\" })\n          this.handleCancel()\n        }} title={`${this.state.registered ? \"Record updated for the patient\" : \"New patient record created\"}`} visible={!!this.state.success} destroyOnClose={true} footer={null}>\n          <h1>{this.state.success}</h1>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport AuthService from \"../services/auth.service\";\nimport { Card } from \"antd\";\n\ninterface RouterProps {\n  history: string;\n}\n\ntype Props = RouteComponentProps<RouterProps>;\n\ntype State = {\n  username: string,\n  password: string,\n  loading: boolean,\n  message: string\n};\n\nexport default class Login extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      username: Yup.string().required(\"This field is required!\"),\n      password: Yup.string().required(\"This field is required!\"),\n    });\n  }\n\n  handleLogin(formValue: { username: string; password: string }) {\n    const { username, password } = formValue;\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n\n    AuthService.login(username, password).then(\n      () => {\n        this.props.history.push(\"/search\");\n        window.location.reload();\n      },\n      error => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          loading: false,\n          message: resMessage\n        });\n      }\n    );\n  }\n\n  render() {\n    const { loading, message } = this.state;\n\n    const initialValues = {\n      username: \"\",\n      password: \"\",\n    };\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n          <Formik\n            initialValues={initialValues}\n            validationSchema={this.validationSchema}\n            onSubmit={this.handleLogin}\n          >\n            <Form>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                <ErrorMessage\n                  name=\"username\"\n                  component=\"div\"\n                  className=\"alert alert-danger\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Field name=\"password\" type=\"password\" className=\"form-control\" />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"alert alert-danger\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading}>\n                  {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Login</span>\n                </button>\n              </div>\n\n              {message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {message}\n                  </div>\n                </div>\n              )}\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n","const eventBus = {\n  on(event: string, callback: EventListener) {\n    document.addEventListener(event, (e) => callback(e));\n  },\n  dispatch(event: string, data?: any) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event: string, callback: EventListener) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","import { NavLink } from 'react-router-dom';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport authService from '../services/auth.service';\r\n\r\nconst HeaderComponent = ({ currentUser }: any) => {\r\n\r\n    const logOut=()=> {\r\n        authService.logout();\r\n    }\r\n    return (<div style={{background:\"#fff\",borderBottomLeftRadius:\"1.2rem\",boxShadow:\"0px 4px 20px #00000021\"}}>\r\n        <NavLink to={\"/\"} className=\"navbar-brand\">\r\n            GAVS\r\n        </NavLink>\r\n        <nav className=\"navbar-top\">\r\n            <div>Welcome Username</div>\r\n            <Avatar size={30} icon={<UserOutlined />} />\r\n        </nav>\r\n       \r\n        <nav className=\"navbar navbar-expand navbar-dark bg-lite\">\r\n            <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink to={\"/profile\"} className=\"nav-link\" activeClassName=\"active-nav\">\r\n                        {currentUser.username}\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\r\n                        LogOut\r\n                    </a>\r\n                </li>\r\n            </div>\r\n        </nav>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;","import { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\n\nimport AuthService from \"./services/auth.service\";\nimport IUser from './types/user.type';\n\nimport Login from \"./components/login.component\";\n\nimport EventBus from \"./common/EventBus\";\nimport Search from \"./components/search.component\";\nimport Enroll from \"./components/enroll.component\";\nimport HeaderComponent from \"./components/header.component\";\ntype Props = {};\n\ntype State = {\n  currentUser: IUser | undefined\n}\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      currentUser: undefined\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user\n        // showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        // showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n\n    EventBus.on(\"logout\", this.logOut);\n  }\n\n  componentWillUnmount() {\n    EventBus.remove(\"logout\", this.logOut);\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      currentUser: undefined,\n    });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"app-wrapper\">\n\n\n\n        {currentUser && (window.location.pathname !==\"/\" && !window.location.pathname.includes(\"/login\") ) ? <HeaderComponent currentUser={currentUser} />: null}\n\n        <div style={{ background: \"#ECF5FF\" }}>\n          <div className=\"container-wrapper container\">\n            <Switch>\n              <Route exact path={[\"/\", \"/login\"]} component={Login} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route path=\"/search\" component={Search} />\n              <Route path=\"/enroll\" component={Enroll} />\n            </Switch>\n          </div>\n        </div>\n\n        { /*<AuthVerify logOut={this.logOut}/> */}\n      </div>\n    );\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from \"axios\";\n//import { Profiler } from \"react\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username: string, password: string) {\n    // return axios\n    //   .post(API_URL + \"signin\", {\n    //     username,\n    //     password\n    //   })\n    //   .then(response => {\n    //     if (response.data.accessToken) {\n    //       localStorage.setItem(\"user\", JSON.stringify(response.data));\n    //     }\n\n    //     return response.data;\n    //   });\n    if(username === \"admin\" && password === \"admin\"){\n      localStorage.setItem(\"user\", JSON.stringify({\"username\": \"Admin\"}));\n      return Promise.resolve('Success');\n    }else\n      return Promise.reject('login');\n    \n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username: string, email: string, password: string) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    const userStr = localStorage.getItem(\"user\");\n    if (userStr) return JSON.parse(userStr);\n\n    return null;\n  }\n}\n\nexport default new AuthService();\n","export default function authHeader() {\n  const userStr = localStorage.getItem(\"user\");\n  let user = null;\n  if (userStr)\n    user = JSON.parse(userStr);\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken,\"Access-Control-Allow-Origin\": \"*\" };       // for Node.js Express back-end\n  } else {\n    return {\"Access-Control-Allow-Origin\": \"*\"};\n  }\n}","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://1be6-34-139-167-51.ngrok.io/';\n\nclass AadharService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getAadharDetails(aadharnumber: string) {\n    return axios.get(API_URL + 'aadhaar_data_retrieval?aadhaar_num=' + aadharnumber, { headers: authHeader() });\n  }\n\n  saveAadharDetails(data: any) {\n    return axios.post(API_URL + 'save_aadhaar_data', data);\n  }\n\n  getAadharDetrailsUpload(img: File) {\n\n    const data = new FormData()\n\n    data.append('file', img)\n\n    return axios.post(API_URL + \"upload_img\", data, {\n      headers: {\n\n        // Overwrite Axios's automatically set Content-Type\n\n        'Content-Type': 'multipart/formData'\n\n      }\n    });\n\n  }\n}\n\nexport default new AadharService();\n"],"sourceRoot":""}